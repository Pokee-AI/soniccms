---
import { getAdminKvData } from "@services/kv-data";
import { apiConfig } from "../../../db/routes";
import AdminLayout from "../layouts/admin-layout.astro";
import TableCacheRequests from "components/table-cache-requests";
import { getFieldDefinitions } from "@services/fields";

const data = await getAdminKvData(Astro);

const tableConfigRecord = apiConfig.find((t) => t.route === "cache-requests");
const tableConfig = getFieldDefinitions(tableConfigRecord);

//remove fields

tableConfig.formFields = tableConfig.formFields.filter(
  (f) => f.key !== "createdOn"
);

tableConfig.formFields = tableConfig.formFields.filter(
  (f) => f.key !== "updatedOn"
);

tableConfig.formFields = tableConfig.formFields.filter(
  (f) => f.key !== "deletedOn"
);
//add fields

tableConfig.formFields.push({
  key: "createdOnAgo",
  label: "Created On",
  type: "textField",
});

tableConfig.formFields.push({
  key: "matchingKvRecord",
  label: "Matching KV Record",
  type: "textField",
});

tableConfig.formFields.push({
  key: "kvUpdatedOnAgo",
  label: "KV Updated",
  type: "textField",
});

tableConfig.formFields.push({
  key: "kvTTL",
  label: "KV TTL",
  type: "textField",
});

let x;
---

<AdminLayout title=`SonicJs Admin` | Cache `>

  <div class="mt-6 flex items-center justify-end gap-x-6">
    <button type="button" class="text-sm font-semibold leading-6 text-white"
      >Cancel</button
    >
    <a
      href="/api/v1/admin/purge-kv-cache-requests"
      type="submit"
      class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
      >Purge KV</a
    >
    <a
    href="/api/v1/admin/purge-d1-cache-requests"
    type="submit"
    class="rounded-md bg-indigo-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
    >Purge D1 Requests</a
  >
  </div>
  <div>[purge records] | [purge kv] | [resync all]</div>
  <div>
    KV Count: {data.kvRecordsCount}
  </div>
  <div>
    Records Count: {data.cacheRequestsCount}
  </div>
  <div>
    <TableCacheRequests client:load tableConfig={tableConfig} data={data} />
  </div>
  <p>
    cache request page, <br />show if data and kv list in sync.
    <br />if not, sync not, show total count records and kv entires.
    <br />show green dot next to record indicating it has associated kv entry.
    <br />show last sync date and time. (sync'd 3 days ago)
    <br />sync now for each record
    <br />really need to know that cached data is not stale regardless of record
    and kv entry
  </p>
</AdminLayout>
